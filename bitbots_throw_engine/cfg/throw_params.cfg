#! /usr/bin/env python

PACKAGE = 'bitbots_throw'
import roslib

roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
default = gen.add_group("Default Throw", type="tab")
throw_1 = gen.add_group("Throw 1", type="tab")
throw_2 = gen.add_group("Throw 2", type="tab")
throw_3 = gen.add_group("Throw 3", type="tab")
throw_4 = gen.add_group("Throw 4", type="tab")

throw_movement_enum = gen.enum([gen.const("testing", int_t, 0, "Movement for testing purpose")
                               ,gen.const("throw_movement", int_t, 1, "Standard movement. Uses velocities for the points added to the curves")
                               ,gen.const("throw_movement_position_only", int_t, 2, "Standard movement, but does not uses velocities for the curves")]
                              ,"Enum to choose which movement will be used")

throw_curve_enum = gen.enum([gen.const("beziercurve", int_t, 0, "Beziercurve Throw")
                            ,gen.const("linear_spline", int_t, 1, "Linear Spline Throw")
                            ,gen.const("cubic_spline", int_t, 2, "Cubic Spline Throw")
                            ,gen.const("smooth_spline", int_t, 3, "Smooth Spline Throw")]
                           ,"Enum to choose which curve the movement will be using")

# Throw Default Values
#       Name       Type      Level    Description     Default Min   Max
default.add("throw_movement_enum", int_t, 0, "The movement that should used if no other throw fit via an enum", 2, min=0, max=2, edit_method=throw_movement_enum)
default.add("arms_curve_enum", int_t, 0, "The curves that shall be used for the arms in this movement via an enum", 2, min=0, max=3, edit_method=throw_curve_enum)
default.add("legs_curve_enum", int_t, 0, "The curves that shall be used for the legs in this movement via an enum", 2, min=0, max=3, edit_method=throw_curve_enum)
default.add("throw_strength", double_t, 1, "How many percent of the max_throw_velocity shall be used if possible", 0.5, min=0.1, max=1)
default.add("throw_angle", double_t, 1, "The Angle at which the ball shall thrown", 30.0, min=-90.0, max=90.0)
default.add("goal_tolerance", double_t, 1, "The amount of deviation from the goal that is tolerated", 0.1, min=0.01, max=1.0)
default.add("velocity_adaptation_rate", double_t, 1, "The amount the reference velocity will be increased/decreased to find the fitting velocity", 0.1, min=0.01, max=10.0)
default.add("movement_duration", double_t, 1, "Duration of the full movement cycle (in s, > 0)", 10.0, min=0.1, max=20.0)
default.add("movement_share_pick_up", double_t, 1, "The share of the movement cycle dedicated to picking up the ball", 0.25, min=0, max=1)
default.add("movement_share_preparation", double_t, 1, "The share of the movement cycle dedicated to prepare the throwing the ball", 0.25, min=0, max=1)
default.add("movement_share_throw", double_t, 1, "The share of the movement cycle dedicated to throwing the ball", 0.25, min=0, max=1)
default.add("movement_share_conclusion", double_t, 1, "The share of the movement cycle dedicated to motion after throwing the ball", 0.25, min=0, max=1)
default.add("movement_offset_move_arms_away_from_ball", double_t, 1, "The amount of time to move the arms away from the ball", 0.01, min=0.01, max=0.5)

# Throw 1
#       Name       Type      Level    Description     Default Min   Max
throw_1.add("throw_1_throw_active", bool_t, 0, "Parameter that shows if this throw shall be used", False)
throw_1.add("throw_1_throw_priority_level", int_t, 0, "Parameter to control if there are two or more throws that are eligable which shall be used first. the rule is: the throw with the lowest level will be used", 1, min=0, max=100)
throw_1.add("throw_1_throw_movement_enum", int_t, 0, "The movement that should used via an enum", 1, min=0, max=2, edit_method=throw_movement_enum)
throw_1.add("throw_1_arms_curve_enum", int_t, 0, "The curves that shall be used for the arms in this movement via an enum", 2, min=0, max=3, edit_method=throw_curve_enum)
throw_1.add("throw_1_legs_curve_enum", int_t, 0, "The curves that shall be used for the legs in this movement via an enum", 2, min=0, max=3, edit_method=throw_curve_enum)
throw_1.add("throw_1_throw_min_distance", double_t, 0, "The minimum distance this throw should be used for", 0, min=0, max=100)
throw_1.add("throw_1_throw_max_distance", double_t, 0, "The maximum distance this throw should be used for", 0, min=0, max=100)
throw_1.add("throw_1_throw_strength", double_t, 1, "How many percent of the max_throw_velocity shall be used if possible", 0, min=0, max=1)
throw_1.add("throw_1_throw_angle", double_t, 0, "The Angle at which the ball shall thrown. If value is 0, the default value will be used.", 0.0, min=-90.0, max=90.0)
throw_1.add("throw_1_goal_tolerance", double_t, 1, "The amount of deviation from the goal that is tolerated", 0.1, min=0.01, max=1.0)
throw_1.add("throw_1_velocity_adaptation_rate", double_t, 1, "The amount the reference velocity will be increased/decreased to find the fitting velocity", 0.1, min=0.01, max=10.0)
throw_1.add("throw_1_movement_duration", double_t, 0, "The share of the movement cycle dedicated to picking up the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_1.add("throw_1_movement_share_pick_up", double_t, 0, "The share of the movement cycle dedicated to picking up the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_1.add("throw_1_movement_share_preparation", double_t, 0, "The share of the movement cycle dedicated to prepare the throwing the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_1.add("throw_1_movement_share_throw", double_t, 0, "The share of the movement cycle dedicated to throwing the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_1.add("throw_1_movement_share_conclusion", double_t, 0, "The share of the movement cycle dedicated to motion after throwing the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_1.add("throw_1_movement_offset_move_arms_away_from_ball", double_t, 1, "The amount of time to move the arms away from the ball. If value is 0, the default value will be used.", 0, min=0.0, max=0.5)

# Throw 2
#       Name       Type      Level    Description     Default Min   Max
throw_2.add("throw_2_throw_active", bool_t, 0, "Parameter that shows if this throw shall be used", False)
throw_2.add("throw_2_throw_priority_level", int_t, 0, "Parameter to control if there are two or more throws that are eligable which shall be used first. the rule is: the throw with the lowest level will be used", 1, min=0, max=100)
throw_2.add("throw_2_throw_movement_enum", int_t, 0, "The movement that should used via an enum", 1, min=0, max=2, edit_method=throw_movement_enum)
throw_2.add("throw_2_arms_curve_enum", int_t, 0, "The curves that shall be used for the arms in this movement via an enum", 2, min=0, max=3, edit_method=throw_curve_enum)
throw_2.add("throw_2_legs_curve_enum", int_t, 0, "The curves that shall be used for the legs in this movement via an enum", 2, min=0, max=3, edit_method=throw_curve_enum)
throw_2.add("throw_2_throw_min_distance", double_t, 0, "The minimum distance this throw should be used for", 0, min=0, max=100)
throw_2.add("throw_2_throw_max_distance", double_t, 0, "The maximum distance this throw should be used for", 0, min=0, max=100)
throw_2.add("throw_2_throw_strength", double_t, 1, "How many percent of the max_throw_velocity shall be used if possible", 0, min=0, max=1)
throw_2.add("throw_2_throw_angle", double_t, 0, "The Angle at which the ball shall thrown. If value is 0, the default value will be used.", 0.0, min=-90.0, max=90.0)
throw_2.add("throw_2_goal_tolerance", double_t, 1, "The amount of deviation from the goal that is tolerated", 0.1, min=0.01, max=1.0)
throw_2.add("throw_2_velocity_adaptation_rate", double_t, 1, "The amount the reference velocity will be increased/decreased to find the fitting velocity", 0.1, min=0.01, max=10.0)
throw_2.add("throw_2_movement_duration", double_t, 0, "The share of the movement cycle dedicated to picking up the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_2.add("throw_2_movement_share_pick_up", double_t, 0, "The share of the movement cycle dedicated to picking up the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_2.add("throw_2_movement_share_preparation", double_t, 0, "The share of the movement cycle dedicated to prepare the throwing the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_2.add("throw_2_movement_share_throw", double_t, 0, "The share of the movement cycle dedicated to throwing the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_2.add("throw_2_movement_share_conclusion", double_t, 0, "The share of the movement cycle dedicated to motion after throwing the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_2.add("throw_2_movement_offset_move_arms_away_from_ball", double_t, 1, "The amount of time to move the arms away from the ball. If value is 0, the default value will be used.", 0, min=0.0, max=0.5)

# Throw 3
#       Name       Type      Level    Description     Default Min   Max
throw_3.add("throw_3_throw_active", bool_t, 0, "Parameter that shows if this throw shall be used", False)
throw_3.add("throw_3_throw_priority_level", int_t, 0, "Parameter to control if there are two or more throws that are eligable which shall be used first. the rule is: the throw with the lowest level will be used", 1, min=0, max=100)
throw_3.add("throw_3_throw_movement_enum", int_t, 0, "The movement that should used via an enum", 1, min=0, max=2, edit_method=throw_movement_enum)
throw_3.add("throw_3_arms_curve_enum", int_t, 0, "The curves that shall be used for the arms in this movement via an enum", 2, min=0, max=3, edit_method=throw_curve_enum)
throw_3.add("throw_3_legs_curve_enum", int_t, 0, "The curves that shall be used for the legs in this movement via an enum", 2, min=0, max=3, edit_method=throw_curve_enum)
throw_3.add("throw_3_throw_min_distance", double_t, 0, "The minimum distance this throw should be used for", 0, min=0, max=100)
throw_3.add("throw_3_throw_max_distance", double_t, 0, "The maximum distance this throw should be used for", 0, min=0, max=100)
throw_3.add("throw_3_throw_strength", double_t, 1, "How many percent of the max_throw_velocity shall be used if possible", 0, min=0, max=1)
throw_3.add("throw_3_throw_angle", double_t, 0, "The Angle at which the ball shall thrown. If value is 0, the default value will be used.", 0.0, min=-90.0, max=90.0)
throw_3.add("throw_3_goal_tolerance", double_t, 1, "The amount of deviation from the goal that is tolerated", 0.1, min=0.01, max=1.0)
throw_3.add("throw_3_velocity_adaptation_rate", double_t, 1, "The amount the reference velocity will be increased/decreased to find the fitting velocity", 0.1, min=0.01, max=10.0)
throw_3.add("throw_3_movement_duration", double_t, 0, "The share of the movement cycle dedicated to picking up the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_3.add("throw_3_movement_share_pick_up", double_t, 0, "The share of the movement cycle dedicated to picking up the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_3.add("throw_3_movement_share_preparation", double_t, 0, "The share of the movement cycle dedicated to prepare the throwing the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_3.add("throw_3_movement_share_throw", double_t, 0, "The share of the movement cycle dedicated to throwing the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_3.add("throw_3_movement_share_conclusion", double_t, 0, "The share of the movement cycle dedicated to motion after throwing the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_3.add("throw_3_movement_offset_move_arms_away_from_ball", double_t, 1, "The amount of time to move the arms away from the ball. If value is 0, the default value will be used.", 0, min=0.0, max=0.5)

# Throw 4
#       Name       Type      Level    Description     Default Min   Max
throw_4.add("throw_4_throw_active", bool_t, 0, "Parameter that shows if this throw shall be used", False)
throw_4.add("throw_4_throw_priority_level", int_t, 0, "Parameter to control if there are two or more throws that are eligable which shall be used first. the rule is: the throw with the lowest level will be used", 1, min=0, max=100)
throw_4.add("throw_4_throw_movement_enum", int_t, 0, "The movement that should used via an enum", 1, min=0, max=2, edit_method=throw_movement_enum)
throw_4.add("throw_4_arms_curve_enum", int_t, 0, "The curves that shall be used for the arms in this movement via an enum", 2, min=0, max=3, edit_method=throw_curve_enum)
throw_4.add("throw_4_legs_curve_enum", int_t, 0, "The curves that shall be used for the legs in this movement via an enum", 2, min=0, max=3, edit_method=throw_curve_enum)
throw_4.add("throw_4_throw_min_distance", double_t, 0, "The minimum distance this throw should be used for", 0, min=0, max=100)
throw_4.add("throw_4_throw_max_distance", double_t, 0, "The maximum distance this throw should be used for", 0, min=0, max=100)
throw_4.add("throw_4_throw_strength", double_t, 1, "How many percent of the max_throw_velocity shall be used if possible", 0, min=0, max=1)
throw_4.add("throw_4_throw_angle", double_t, 0, "The Angle at which the ball shall thrown. If value is 0, the default value will be used.", 0.0, min=-90.0, max=90.0)
throw_4.add("throw_4_goal_tolerance", double_t, 1, "The amount of deviation from the goal that is tolerated", 0.1, min=0.01, max=1.0)
throw_4.add("throw_4_velocity_adaptation_rate", double_t, 1, "The amount the reference velocity will be increased/decreased to find the fitting velocity", 0.1, min=0.01, max=10.0)
throw_4.add("throw_4_movement_duration", double_t, 0, "The share of the movement cycle dedicated to picking up the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_4.add("throw_4_movement_share_pick_up", double_t, 0, "The share of the movement cycle dedicated to picking up the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_4.add("throw_4_movement_share_preparation", double_t, 0, "The share of the movement cycle dedicated to prepare the throwing the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_4.add("throw_4_movement_share_throw", double_t, 0, "The share of the movement cycle dedicated to throwing the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_4.add("throw_4_movement_share_conclusion", double_t, 0, "The share of the movement cycle dedicated to motion after throwing the ball. If value is 0, the default value will be used.", 0, min=0, max=1)
throw_4.add("throw_4_movement_offset_move_arms_away_from_ball", double_t, 1, "The amount of time to move the arms away from the ball. If value is 0, the default value will be used.", 0, min=0.0, max=0.5)

exit(gen.generate(PACKAGE, "bitbots_throw", "throw_params"))